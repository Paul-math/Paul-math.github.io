<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Pillow之Image模块（一）</title>
    <link href="/2020/03/16/Pillow%E4%B9%8BImage%E6%A8%A1%E5%9D%97%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/03/16/Pillow%E4%B9%8BImage%E6%A8%A1%E5%9D%97%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>﻿# Image类属性</p><blockquote><p>Image类中的属性表示了一张图像的基本信息，现将其主要属性总结如下：</p></blockquote><ul><li><p><strong>format</strong>  &emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 图像的文件格式</p></li><li><p><strong>size</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 图像的大小(单位为像素)，形如(宽度，高度)的2元组</p></li><li><p><strong>width</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 图像宽度（单位为像素）</p></li><li><p><strong>height</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;图像高度（单位为像素）</p></li><li><p><strong>mode</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;  图像的模式，常见模式如下：</p></li></ul><table><thead><tr><th>图像模式</th><th>属性</th></tr></thead><tbody><tr><td>1</td><td>1位像素，每个像素用8个bit表示，黑白二值图，0-黑，255-白</td></tr><tr><td>L</td><td>灰度图，每像素用8位二进制代码表示</td></tr><tr><td>P</td><td>8位彩色模式，每个像素用8位二进制代码表示， 其对应的色彩是按照调色板查询出来的</td></tr><tr><td>RGB</td><td>3*8位像素，每像素用3个二进制字节代码表示，表示真彩色图像</td></tr><tr><td>RGBA</td><td>4*8位像素，带透明蒙版的真彩色，每像素用4个字节二进制代码表示，其中的A为alpha透明度</td></tr><tr><td>CMYK</td><td>印刷模式，每个像素用4个字节二进制代码表示。C=青色；M= 品红色；Y= 黄色；K=黑色</td></tr><tr><td>LAB</td><td>Lab颜色空间，每像素用3个字节二进制代码表示</td></tr><tr><td>YCbCr</td><td>3*8位像素，彩色视频格式</td></tr><tr><td>HSV</td><td>3*8位像素，H为色相，S为饱和度，V为颜色空间</td></tr><tr><td>I</td><td>整数形式表示像素，每像素用4个字节二进制代码表示</td></tr><tr><td>F</td><td>浮点数形式表示像素，每像素用4个字节二进制代码表示</td></tr></tbody></table><ul><li><strong>filename</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;图像的文件名或者路径</li><li><strong>bits</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;  图像的位数</li><li><strong>palette</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;调色板，模式为<code>P</code> 的图像使用调色板定义每个像素的实际颜色。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Pillow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pillow之Image模块（三）</title>
    <link href="/2020/03/16/Pillow%E4%B9%8BImage%E6%A8%A1%E5%9D%97%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2020/03/16/Pillow%E4%B9%8BImage%E6%A8%A1%E5%9D%97%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Image类方法"><a href="#Image类方法" class="headerlink" title="Image类方法"></a>Image类方法</h1><p>​        首先需要创建Image类的对象，进而调用Image类中方法。创建实例可以采用Image模块中的函数(open、new、blend等），该篇为简单起见，通过<code>img = Image.open(&#39;***.jpg&#39;)</code>来创建，此时，img为一个Image对象。</p><hr><h1 id="1-convert"><a href="#1-convert" class="headerlink" title="1.convert"></a>1.convert</h1><pre><code class="python">img.convert(mode=None, matrix=None, dither=None, palette=WEB, colors=256)</code></pre><ul><li><strong>mode</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; ==请求的模式==，即将图像img转换成一张模式为<strong>mode</strong>的新图像</li><li><strong>matrix</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;可选的转换矩阵，如果给定，则该值应为包含浮点值的4或12元组。</li><li><strong>dither</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 从模式<code>RGB</code>转换为<code>P</code>或从<code>RGB</code>或<code>L</code>转换为<code>1</code>时使用，可用的方法为<code>NONE</code>或<code>FLOYDSTEINBERG</code>(默认)。请注意，提供矩阵时不使用此功能。</li><li><strong>palette</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;从模式<code>RGB</code>转换为<code>P</code>时要使用的调色板。可用的调色板是<code>WEB</code>或<code>ADAPTIVE</code>。</li><li><strong>colors</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 用于“自适应”调色板的颜色数。默认值为256。</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个Image对象</li></ul><p>因此可以将Convert()函数传参归纳为以下三种方式：</p><p><code>img.convert(mode)</code></p><p><strong>说明：</strong>该种方式最为常见且最易理解，即图像几种模式之间的相互转换。<br><strong>示例1：</strong></p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像imageim = Image.open(&#39;image.jpg&#39;)#将图像image转化为模式为1的图像imcimc = im.convert(&#39;1&#39;)#显示im.show()imc.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/2020021020394583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>示例2：</strong></p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像im1im = Image.open(&#39;im1.png&#39;)#将图像im1转化为模式为L的图像imcimc = im.convert(&#39;L&#39;)#显示im.show()imc.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210204344711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><code>img.convert(&quot;P&quot;,palette = &quot;WEB&quot;\&quot;ADAPTIVE&quot;)</code></p><p><strong>实例：</strong></p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像imgim = Image.open(&#39;img.jpg&#39;)#将mode为RGB图像image转化为模式为P的图像imc时,用调色板进行调色imc = im.convert(&#39;P&#39;,palette=&#39;WEB&#39;)#显示im.show()imc.show()</code></pre><p><strong>运行结果：</strong></p><p><img src="https://img-blog.csdnimg.cn/2020021020552117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><code>img.convert(mode, matrix)</code><br><strong>说明：</strong> <strong>matrix</strong>应为一个包含浮点值的4或12元组。<br><strong>实例:</strong> <em>将RGB图像（使用D65光源根据ITU-R 709线性校准）转换为CIE XYZ颜色空间：</em></p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像imgim = Image.open(&#39;img.jpg&#39;)rgb2xyz = (    0.412453, 0.357580, 0.180423, 0,    0.212671, 0.715160, 0.072169, 0,    0.019334, 0.119193, 0.950227, 0)#将RGB图像（使用D65光源根据ITU-R 709线性校准）转换为CIE XYZ颜色空间：imc = im.convert(&quot;RGB&quot;, rgb2xyz)#显示im.show()imc.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210210209252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="2-copy"><a href="#2-copy" class="headerlink" title="2.copy"></a>2.copy</h1><pre><code class="python">img.copy()</code></pre><p><strong>功能：</strong>复制img图像,返回图像img副本。</p><hr><h1 id="3-crop"><a href="#3-crop" class="headerlink" title="3.crop"></a>3.crop</h1><pre><code class="python">img.crop（box = None ）</code></pre><ul><li><strong>box</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个四元组，定义了左，上，右和下像素坐标。</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;一个Image对象</li></ul><p><strong>功能:</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;裁剪box所表示区域的图像</p><p><strong>实例：</strong></p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像im2im = Image.open(&#39;im2.png&#39;)#裁剪图像，返回(100,50,700,400)所表示区域的图像im_new = im.crop((100,50,700,400))#展示im.show()im_new.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/2020021021250186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="4-paste"><a href="#4-paste" class="headerlink" title="4.paste"></a>4.paste</h1><pre><code class="python">img.paste(im, box=None, mask=None)</code></pre><ul><li><strong>im</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 既可以是图像，也可以是像素值（整数或元组）</li><li><strong>box</strong>    &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;4元组，提供要粘贴的区域。如果为2元组，则以该2元组为左上角开始粘贴。如果省略，则将图像粘贴到左上角(0,0)。</li><li><strong>mask</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;可选的蒙版图像。</li></ul><p><strong>实例1：</strong></p><pre><code class="python">from  PIL import  Image#打开源图像imgimg = Image.open(&#39;image.jpg&#39;)img.show()#打开要被粘贴的图像img_1img_1 = Image.open(&#39;pig2.png&#39;)img_1.show()#将图像img_1粘贴到源图像img上img.paste(img_1)#显示img.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210224523727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>实例2：</strong></p><pre><code class="python">#导入Image模块from  PIL import  Image#打开源图像imgimg = Image.open(&#39;image.jpg&#39;)img.show()#打开要被粘贴的图像img_1img_1 = Image.open(&#39;pig2.png&#39;)img_1.show()#将图像img_1粘贴到源图像img上,(100,100)为其粘贴的左上角img.paste(img_1,(100,100))#显示img.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210225056467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>实例3：</strong></p><pre><code class="python">#导入Image模块from  PIL import  Image#打开源图像imgimg = Image.open(&#39;image.jpg&#39;)img.show()#将(100,100,500,500)该区域填充为红色img.paste(&#39;red&#39;,(100,100,500,500))#显示img.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210225427169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>实例4：</strong></p><pre><code class="python">#导入Image模块from  PIL import Image#打开源图像im1img = Image.open(&#39;im2.png&#39;)img.show()#打开要被粘贴图像pig2img_1 = Image.open(&#39;pig2.png&#39;)img_1.show()#以im4图像为maskm = Image.open(&#39;im4.png&#39;)m.show()#调整蒙版图像大小，使之与被粘贴图像尺寸大小一样mask = m.resize(img_1.size)#以mask为蒙版，将img_1粘贴到img上img.paste(img_1,mask)#显示img.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210230740532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>说明：</strong>作为mask的图像，其大小一定要与被粘贴的图像大小一致。</p><hr><h1 id="5-draft"><a href="#5-draft" class="headerlink" title="5.draft"></a>5.draft</h1><pre><code class="python">img.draft（mode，size ）</code></pre><ul><li><strong>mode</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;请求的图像模式</li><li><strong>size</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;请求的图像大小</li></ul><p><strong>功能：</strong>配置图像文件加载器，使其返回与给定模式和大小尽可能匹配的图像版本。例如，可以在加载彩色JPEG时将其转换为灰度。<br><strong>注意：</strong>大多数图像未实现此方法。当前仅对JPEG和MPO图像实现。<br><strong>实例：</strong></p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像imimg = Image.open(&#39;image.jpg&#39;)#返回模式为L，大小为（100，100）的图像img.draft(&#39;L&#39;,(100,100))img.show()</code></pre><p><strong>运行功能：</strong><br><img src="https://img-blog.csdnimg.cn/20200210232801404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="6-filter"><a href="#6-filter" class="headerlink" title="6.filter"></a>6.filter</h1><pre><code class="python">img.filter（filter）</code></pre><ul><li><strong>filter</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;过滤器</li></ul><p><strong>实例：</strong> 使用ImageFilter模块中的滤镜可以模糊输入图像</p><pre><code class="python">#导入模块from PIL import Image, ImageFilter#打开图像im = Image.open(&quot;image.jpg&quot;)im.show()#使用给定的过滤器过滤该图像im_blurred = im.filter(filter=ImageFilter.BLUR)im_blurred.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200210233845573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="7-getbands"><a href="#7-getbands" class="headerlink" title="7.getbands"></a>7.getbands</h1><pre><code class="python">img.getbands()</code></pre><p><strong>功能：</strong>返回一个元组，其中包含该图像中每个管道的名称。</p><p><strong>实例：</strong></p><pre><code class="python">#导入模块from PIL import Image, ImageFilter#打开图像im = Image.open(&quot;image.jpg&quot;)#调用getbands()bands = im.getbands()#输出print(bands)</code></pre><p><strong>运行结果：</strong><br><code>(&#39;R&#39;, &#39;G&#39;, &#39;B&#39;)</code></p><hr><h1 id="8-getbbox"><a href="#8-getbbox" class="headerlink" title="8.getbbox"></a>8.getbbox</h1><pre><code class="python">img.gettbox()</code></pre><p><strong>功能：</strong>&emsp;&emsp; &emsp; &emsp; &emsp;  计算图像中非零区域的边界框。<br><strong>返回值：</strong>&emsp; &emsp; &emsp; &emsp; 4元组，定义了左，上，右和下像素坐标，如果图像为空，则返回None。</p><p><strong>实例：</strong></p><pre><code class="python">#导入模块from PIL import Image, ImageFilter#打开图像im = Image.open(&quot;image.jpg&quot;)#调用getbbox()box = im.getbbox()#输出print(box)</code></pre><p><strong>运行结果：</strong><br><code>(0, 0, 1440, 900)</code></p><hr><h1 id="9-getcolors"><a href="#9-getcolors" class="headerlink" title="9.getcolors"></a>9.getcolors</h1><pre><code class="python">img.getcolors(maxcolors=256):</code></pre><ul><li><strong>maxcolors</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;最大颜色数。如果超过此数字，则此方法返回None。默认限制为256</li></ul><p><strong>功能：</strong>返回此图像中使用的颜色列表。</p><p><strong>实例:</strong></p><pre><code class="python">#导入模块from PIL import Image, ImageFilter#打开图像im = Image.open(&quot;tuya.png&quot;)im.show()#调用getcolors()list_colors = im.getcolors()#输出print(list_colors)</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211094940381.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><code>[(47698, (255, 255, 255, 255)),...,(1, (255, 201, 219, 255)), (4, (255, 175, 201, 255))]</code></p><hr><h1 id="10-getpixel"><a href="#10-getpixel" class="headerlink" title="10.getpixel"></a>10.getpixel</h1><pre><code class="python">img.getpixel(xy)</code></pre><ul><li><strong>xy</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;坐标，形式为（x，y）</li></ul><p><strong>功能：</strong>返回给定位置的像素值。</p><hr><h1 id="11-putpixel"><a href="#11-putpixel" class="headerlink" title="11.putpixel"></a>11.putpixel</h1><pre><code class="python">img.putpixel(xy,value)</code></pre><ul><li><strong>xy</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;像素坐标，形式为（x，y）</li><li><strong>value</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 像素值，对于单通道，为一个数值，如果为多通道，则为元组</li></ul><p><strong>功能：</strong>改变某像素的值。</p><hr><h1 id="12-resize"><a href="#12-resize" class="headerlink" title="12.resize"></a>12.resize</h1><pre><code class="python">img.resize(size，resample = 3，box = None，reduction_gap = None)</code></pre><ul><li><strong>size</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;请求的大小(以像素为单位)，格式为2元组:(宽度，高度)。</li></ul><p><strong>功能：</strong>改变图像的尺寸，既可以放大也可以缩小。</p><hr><h1 id="13-thumbnail"><a href="#13-thumbnail" class="headerlink" title="13.thumbnail"></a>13.thumbnail</h1><pre><code class="python">img.thumbnail(size，resample = 3，reduction_gap = 2.0)</code></pre><ul><li><strong>size</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;请求的大小(以像素为单位)，格式为2元组:(宽度，高度)。</li></ul><p><strong>功能：</strong>将此图像制作为缩略图。</p><hr><h1 id="14-transpose"><a href="#14-transpose" class="headerlink" title="14.transpose"></a>14.transpose</h1><pre><code class="python">img.transpose(method)</code></pre><ul><li><strong>method</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;图像转化的方法，详情见下表：</li></ul><table><thead><tr><th>method</th><th>实现功能</th></tr></thead><tbody><tr><td>FLIP_LEFT_RIGHT</td><td>水平翻转图像(从左到右),输出image沿宽度方向翻转的内容</td></tr><tr><td>FLIP_TOP_BOTTOM</td><td>垂直翻转图像(从上到下),输出image沿高度方向翻转的内容</td></tr><tr><td>ROTATE_90</td><td>逆时针旋转图像90°</td></tr><tr><td>ROTATE_180</td><td>逆时针旋转图像180°</td></tr><tr><td>ROTATE_270</td><td>逆时针旋转图像270°</td></tr><tr><td>TRANSPOSE</td><td>水平翻转图像(从左到右),逆时针旋转图像90°</td></tr><tr><td>TRANSVERSE</td><td>水平翻转图像(从左到右)，逆时针旋转图像270°</td></tr></tbody></table><p><strong>实例1：</strong> <code>FLIP_LEFT_RIGHT</code></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)img.show()# 水平翻转图像(从左到右)img.transpose(Image.FLIP_LEFT_RIGHT).show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211145933991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>实例2：</strong> <code>FLIP_TOP_BOTTOM</code></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)img.show()# 竖直翻转图像(从上到下)img.transpose(Image.FLIP_TOP_BOTTOM).show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211150415955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>实例3：</strong> <code>ROTATE_90</code></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)img.show()# 逆时针旋转90°img.transpose(Image.ROTATE_90).show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211150606848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>实例6：</strong> <code>TRANSPOSE</code></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)img.show()# 先左右翻转然后逆时针旋转90°img.transpose(Image.TRANSPOSE).show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211150826772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>实例7：</strong> <code>TRANSVERSE</code></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)img.show()# 先翻转然后逆时针旋转270°img.transpose(Image.TRANSVERSE).show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211151027810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="15-rotate"><a href="#15-rotate" class="headerlink" title="15.rotate"></a>15.rotate</h1><pre><code class="python">img.rotate(angle,resample=0, expand=0, center=None, translate=None, fillcolor=None)</code></pre><ul><li><strong>angel</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;图像旋转的角度</li></ul><p><strong>功能：</strong>将图像内容以逆时针为正方向，旋转angel角度<br><strong>说明：</strong>图像尺寸并没有旋转！</p><p><strong>实例：</strong> <em>逆时针旋转90°</em></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)img.show()# 逆时针旋转img.rotate(90).show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200211152204823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="16-spilt"><a href="#16-spilt" class="headerlink" title="16.spilt"></a>16.spilt</h1><pre><code class="python">img.split()</code></pre><ul><li><strong>返回值</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个包含通道的元组</li></ul><p><strong>功能：</strong>将此图像分成单独的通道（每个通道皆是Image对象）</p><p><strong>实例：</strong></p><pre><code class="python">#导入Image模块from PIL import Image#打开图像img = Image.open(&#39;image.jpg&#39;)#分离通道bands = img.split()print(bands)</code></pre><p><strong>运行结果：</strong><br><code>(&lt;PIL.Image.Image image mode=L size=1440x900 at 0x1D76F01B700&gt;, &lt;PIL.Image.Image image mode=L size=1440x900 at 0x1D77FEB3850&gt;, &lt;PIL.Image.Image image mode=L size=1440x900 at 0x1D77FEB3730&gt;)</code></p><hr><h1 id="17-save"><a href="#17-save" class="headerlink" title="17.save"></a>17.save</h1><pre><code class="python">img.save(fp，format = None，** params)</code></pre><ul><li><strong>fp</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;保存图像的文件名</li></ul><p><strong>功能：</strong>将图像保存到本地。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Pillow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pillow之Image模块（二）</title>
    <link href="/2020/03/16/Pillow%E4%B9%8BImage%E6%A8%A1%E5%9D%97%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2020/03/16/Pillow%E4%B9%8BImage%E6%A8%A1%E5%9D%97%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Image模块中的函数"><a href="#Image模块中的函数" class="headerlink" title="Image模块中的函数"></a>Image模块中的函数</h1><p>Image模块中函数的返回值皆是一个Image对象，因而可以通过该模块中的函数来创建Image类的实例。</p><hr><h1 id="1-open"><a href="#1-open" class="headerlink" title="1.open"></a>1.open</h1><pre><code class="python">Image.open(file, mode)</code></pre><ul><li><p><strong>file</strong>     &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;       图像文件的全路径</p><ul><li><strong>mode</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;打开文件的方式，默认值为<code>r</code></li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 一个<em>Image</em>对象</li></ul><p><strong>功能</strong>：以<strong>mode</strong>为打开方式，加载全路径为<strong>file</strong>的图像</p></li></ul><p><strong>说明</strong>：创建了Image类的实例后，便可以通过类的方法<code>show()</code>来显示图像。</p><p><strong>示例：</strong> <em>打开图像并显示</em></p><pre><code class="python"> #导入Image模块from PIL import Image  #打开名为‘image.jpg’的图像             img = Image.open(&#39;image.jpg&#39;)        #显示img.show()                           </code></pre><p><strong>运行结果：</strong><br>调用图片查看器，打开了该文件目录下的名为”image.jpg”的图像。<br><img src="https://img-blog.csdnimg.cn/20200210095235326.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="2-new"><a href="#2-new" class="headerlink" title="2.new"></a>2.new</h1><pre><code class="python">Image.new(mode, size, color=0)</code></pre><ul><li><strong>mode</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 所要创建的图像模式（RGB、RGBA等）</li><li><strong>size</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;所要创建的图像尺寸</li><li><strong>color</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;       所要创建图像的颜色，默认为黑色，对于创建RGB之类的图像;既可以用元组来确定颜色，也可以用ImageColor模块支持的颜色字符，如，blue为蓝色，red为红色……</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 一个<em>Image</em>对象</li></ul><p><strong>功能：</strong>创建一张模式为<strong>mode</strong>，尺寸大小为<strong>size</strong>，颜色为<strong>color</strong>的图像。</p><p><strong>示例：</strong> <em>创建模式为RGB，分辨率为400x200，颜色为红色的图像</em></p><pre><code class="python">#导入Image模块from PIL import Image#创建模式为RGB，分辨率为400x200，颜色为红色的图像img_1 = Image.new(&#39;RGB&#39;,(400,200),(255,0,0))  #颜色利用元组确定img_2 = Image.new(&#39;RGB&#39;,(400,200),&#39;red&#39;)      #颜色利用ImageColor模块里颜色字符确定# 显示图像img_1.show()img_2.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/2020020913005771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="3-blend"><a href="#3-blend" class="headerlink" title="3.blend"></a>3.blend</h1><pre><code class="python">Image.blend(im1, im2, alpha)</code></pre><ul><li><strong>im1</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;参与混合的图像1，混合过程中透明度设置为 <em>(1-apha)</em></li><li><strong>im2</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;参与混合的图像2，混合过程中透明度设置为 <em>(apha)</em></li><li><strong>alpha</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 混合透明度，取值为[0-1]</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个<em>Image</em>对象</li></ul><p><strong>功能：</strong>将im1，im2两幅图像（两者必须具有相同的mode和size）以一定透明度混合；<br><strong>混合方法：*</strong>(im1 x (1-alpha) + im2 x alpha)*<br><strong>特例：</strong></p><ul><li>当alpha为0，返回im1图像的副本</li><li>当alpha为1，返回im2图像的副本</li></ul><p><strong>示例</strong>：</p><pre><code class="python">#导入Image模块from PIL import Image#打开图像im1im1 = Image.open(&#39;im1.png&#39;)#打开图像im2im2 = Image.open(&#39;im2.png&#39;)#以alpha=0混合该两张图像，得到的是im1原图像img0 = Image.blend(im1,im2,0)img0.show()#以alpha=1混合该两张图像，得到的是im2原图像img1 = Image.blend(im1,im2,1)img1.show()#以alpha=0.5混合该两张图像，得到一个新的图像对象imgimg = Image.blend(im1,im2,0.5)img.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200209135553956.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="4-composite"><a href="#4-composite" class="headerlink" title="4.composite"></a>4.composite</h1><pre><code class="python">Image.composite(im1, im2, mask)</code></pre><ul><li><strong>im1</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;参与混合的图像1</li><li><strong>im2</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;参与混合的图像2</li><li><strong>mask</strong>  &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 混合遮罩</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个<em>Image</em>对象</li></ul><p><strong>功能：</strong>使用<strong>mask</strong>混合<strong>im1</strong>和<strong>im2</strong>;，作为<strong>mask</strong>的图像模式可以是“<code>1</code>”、“<code>L</code>”、“<code>RGBA</code>”（它们mode和size必须相同，且mask应具有一定的透明度）。</p><p><strong>示例</strong>：</p><pre><code class="python">#导入Image模块from PIL import Image#打开图像im1im1 = Image.open(&#39;im1.png&#39;)#打开图像im2im2 = Image.open(&#39;im2.png&#39;)#打开图像im3mask = Image.open(&#39;im3.png&#39;)#将图像im3作为mask来混合im1和im2img = Image.composite(im1,im2,mask)img.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200209175347984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>说明：</strong>该函数关键在于图像的选择，作为mask的图像必须要是透明的，否则运行过后看不出效果。</p><hr><h1 id="5-eval"><a href="#5-eval" class="headerlink" title="5.eval"></a>5.eval</h1><pre><code class="python">Image.eval(image, function)</code></pre><ul><li><strong>image</strong>  &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 输入的图像</li><li><strong>function</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp; 给输入图像的每个像素应用该函数</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个<em>Image</em>对象</li></ul><p><strong>功能：</strong><br>&emsp;&emsp;使用变量<strong>function</strong>对应的函数（该函数只允许接收一个整数类型参数）处理变量<strong>image</strong>所代表图像中的每一个像素点，如果变量<strong>image</strong>所代表图像有多个通道，那变量<strong>function</strong>对应的函数作用于每一个通道。<br><strong>示例</strong>：</p><pre><code class="python">#导入Image模块from PIL import Image#打开image.jpg图像img = Image.open(&#39;image.jpg&#39;)# 定义一个函数def func(x):    return x*2# 对图像im每个像素点进行func中的操作img_new = Image.eval(img, func)img_new.show()</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200209194539972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><hr><h1 id="6-merge"><a href="#6-merge" class="headerlink" title="6.merge"></a>6.merge</h1><pre><code class="python">Image.merge(mode, bands)</code></pre><ul><li><strong>mode</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;输出图像的模式</li><li><strong>bands</strong> &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;  一个图像的元组或者列表，包含输出图像中每个波段的一个单一波段图像，所有通道都必须同样大小</li><li><strong>returns</strong>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;一个<em>Image</em>对象</li></ul><p><strong>示例</strong>：</p><pre><code class="python">#导入模块Imagefrom PIL import Image#打开图像im1和im2im1 = Image.open(&quot;im1.png&quot;)im2 = Image.open(&quot;im2.png&quot;)#将图像im1和im2通道分离r1,g1,b1,a1 = im1.split()r2,g2,b2,a2 = im2.split()#合成新的图像im_merge = Image.merge(&quot;RGB&quot;,[r1,g2,b2])im_merge.save(&quot;img_new.png&quot;)</code></pre><p><strong>运行结果：</strong><br><img src="https://img-blog.csdnimg.cn/20200209202427655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Pillow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>注册谷歌账号</title>
    <link href="/2020/03/16/%E6%B3%A8%E5%86%8C%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/"/>
    <url>/2020/03/16/%E6%B3%A8%E5%86%8C%E8%B0%B7%E6%AD%8C%E8%B4%A6%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>  尝试了很多种方法注册谷歌账号，皆未成功，也参考了网上很多教程，诸如利用QQ邮箱辅助注册、在验证手机号时手动输入+86等，最后无意瞥见了网上一篇教程，安装了浏览器扩展程序，才解决了注册谷歌账号时手机号码不能验证的问题。</p></blockquote><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="材料准备"><a href="#材料准备" class="headerlink" title="材料准备"></a>材料准备</h2><p> 1.下载<a href="https://www.centbrowser.cn/" target="_blank" rel="noopener"><strong>百分浏览器(Cent Browser)</strong></a>，或者<a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener"><strong>谷歌浏览器(Chrome)</strong></a>，该篇文章选用的是百分浏览器；<br> 2.下载<a href="https://pan.baidu.com/s/1-rsZBNp9KbLSVl6UNAJdGA" target="_blank" rel="noopener"><strong>谷歌访问助手</strong></a></p><h2 id="安装谷歌访问助手"><a href="#安装谷歌访问助手" class="headerlink" title="安装谷歌访问助手"></a>安装谷歌访问助手</h2><p><strong>1.打开百分浏览器</strong><br><img src="https://img-blog.csdnimg.cn/20200122213007762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>2.安装谷歌访问助手</strong><br><img src="https://img-blog.csdnimg.cn/20200122214126783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200122214201936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>出现以下截图说明谷歌访问助手已成功安装，但只有12小时试用期，对于注册谷歌账号而言已足够，在此就不激活了。<br><img src="https://img-blog.csdnimg.cn/20200122214211979.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="注册谷歌账号"><a href="#注册谷歌账号" class="headerlink" title="注册谷歌账号"></a>注册谷歌账号</h2><p>打开<a href="https://accounts.google.com/" target="_blank" rel="noopener">谷歌账号</a><br>官网，进而下一步操作。<br><img src="https://img-blog.csdnimg.cn/20200122230552602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200122230619680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200122230656324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>点击 <strong>下一步</strong> 后手机会收到如下所示的验证消息：<br><img src="https://img-blog.csdnimg.cn/20200122230752359.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200122230639984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200122230900415.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020012223091376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200122231027448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDE5MTUzNQ==,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>现在我们就完成了谷歌账号的注册！</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>只要找对了方法，步骤及其简单。总而言之，我们只需安装谷歌访问助手，接着再注册谷歌账号，便解决了电话号码无法通过验证的问题。<br>（初次写博客，若有不足及错误，还请各位读者斧正）</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>IT技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
